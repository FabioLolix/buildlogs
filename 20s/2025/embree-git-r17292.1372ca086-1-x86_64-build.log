-- The C compiler identification is GNU 15.2.1
-- The CXX compiler identification is GNU 15.2.1
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found Git: /usr/bin/git (found version "2.50.1")
-- Performing Test COMPILER_HAS_SYCL_SUPPORT
-- Performing Test COMPILER_HAS_SYCL_SUPPORT - Failed
-- GNU detected
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE
-- Found TBB: 2022.2.0 at /usr/lib/cmake/TBB via TBBConfig.cmake
-- Configuring done (0.7s)
-- Generating done (0.0s)
-- Build files have been written to: /build/embree-git/src/build
[  0%] Building CXX object common/simd/CMakeFiles/simd.dir/sse.cpp.o
[  0%] Building CXX object common/math/CMakeFiles/math.dir/constants.cpp.o
[  0%] Building CXX object common/tasking/CMakeFiles/tasking.dir/taskschedulertbb.cpp.o
[  0%] Building CXX object common/sys/CMakeFiles/sys.dir/sysinfo.cpp.o
[  1%] Building CXX object common/sys/CMakeFiles/sys.dir/filename.cpp.o
[  1%] Building CXX object common/sys/CMakeFiles/sys.dir/alloc.cpp.o
[  1%] Building CXX object common/sys/CMakeFiles/sys.dir/mutex.cpp.o
[  2%] Building CXX object common/sys/CMakeFiles/sys.dir/library.cpp.o
[  2%] Building CXX object common/sys/CMakeFiles/sys.dir/regression.cpp.o
[  2%] Building CXX object common/sys/CMakeFiles/sys.dir/thread.cpp.o
[  2%] Building CXX object common/sys/CMakeFiles/sys.dir/estring.cpp.o
[  2%] Building CXX object common/sys/CMakeFiles/sys.dir/condition.cpp.o
[  3%] Building CXX object common/sys/CMakeFiles/sys.dir/barrier.cpp.o
[  3%] Linking CXX static library ../../libmath.a
[  3%] Built target math
[  4%] Linking CXX static library ../../libsimd.a
[  4%] Built target simd
[  4%] Linking CXX static library ../../libsys.a
[  4%] Built target sys
[  4%] Building CXX object common/lexers/CMakeFiles/lexers.dir/stringstream.cpp.o
[  4%] Building CXX object common/lexers/CMakeFiles/lexers.dir/tokenstream.cpp.o
[  5%] Linking CXX static library ../../libtasking.a
[  5%] Built target tasking
[  6%] Generating ../bvh/bvh_intersector1_bvh4.cpp.sse42.cpp
[  6%] Generating ../subdiv/subdivpatch1base_eval.cpp.sse42.cpp
[  6%] Generating ../common/scene_subdiv_mesh.cpp.sse42.cpp
[  6%] Generating ../bvh/bvh_builder.cpp.avx512.cpp
[  6%] Generating ../subdiv/subdivpatch1base_eval.cpp.avx2.cpp
[  6%] Generating ../subdiv/subdivpatch1base_eval.cpp.avx512.cpp
[  6%] Generating ../subdiv/subdivpatch1base_eval.cpp.avx.cpp
[  7%] Generating ../builders/primrefgen.cpp.avx.cpp
[  7%] Generating ../geometry/curve_intersector_virtual_4i.cpp.sse42.cpp
[  7%] Generating ../bvh/bvh_builder_hair.cpp.avx512.cpp
[  7%] Generating ../builders/primrefgen.cpp.avx2.cpp
[  7%] Generating ../bvh/bvh.cpp.avx.cpp
[  7%] Generating ../bvh/bvh_builder_hair_mb.cpp.avx512.cpp
[  7%] Generating ../bvh/bvh_builder.cpp.avx2.cpp
[  8%] Generating ../geometry/curve_intersector_virtual_4i_mb.cpp.sse42.cpp
[  9%] Generating ../bvh/bvh_intersector_hybrid4_bvh4.cpp.sse42.cpp
[  9%] Generating ../bvh/bvh_builder_sah.cpp.avx512.cpp
[  9%] Generating ../geometry/curve_intersector_virtual_4v.cpp.sse42.cpp
[  9%] Generating ../bvh/bvh_builder.cpp.avx.cpp
[  9%] Generating ../bvh/bvh_builder_hair.cpp.avx2.cpp
[  9%] Generating ../geometry/curve_intersector_virtual_8i.cpp.sse42.cpp
[  9%] Generating ../bvh/bvh_builder_sah_mb.cpp.avx512.cpp
[ 10%] Generating ../bvh/bvh_builder_hair_mb.cpp.avx2.cpp
[ 10%] Generating ../bvh/bvh_builder_sah_spatial.cpp.avx512.cpp
[ 11%] Generating ../geometry/curve_intersector_virtual_8v.cpp.sse42.cpp
[ 11%] Generating ../geometry/curve_intersector_virtual_8i_mb.cpp.sse42.cpp
[ 11%] Generating ../bvh/bvh_builder_morton.cpp.avx2.cpp
[ 11%] Generating ../bvh/bvh_builder_sah.cpp.avx2.cpp
[ 11%] Generating ../bvh/bvh_builder_hair.cpp.avx.cpp
[ 12%] Generating ../bvh/bvh_builder_subdiv.cpp.avx512.cpp
[ 12%] Generating ../geometry/instance_array_intersector.cpp.sse42.cpp
[ 12%] Generating ../geometry/grid_soa.cpp.sse42.cpp
[ 12%] Generating ../bvh/bvh_builder_sah_mb.cpp.avx2.cpp
[ 13%] Generating ../bvh/bvh_builder_twolevel.cpp.avx512.cpp
[ 13%] Generating ../geometry/instance_intersector.cpp.sse42.cpp
[ 13%] Generating ../bvh/bvh_builder_hair_mb.cpp.avx.cpp
[ 13%] Generating ../bvh/bvh_builder_morton.cpp.avx.cpp
[ 14%] Generating ../bvh/bvh_intersector_hybrid16_bvh4.cpp.avx512.cpp
[ 15%] Generating ../bvh/bvh_collider.cpp.avx512.cpp
[ 15%] Generating ../bvh/bvh_intersector1_bvh4.cpp.avx512.cpp
[ 15%] Generating ../bvh/bvh_builder_sah.cpp.avx.cpp
[ 16%] Generating ../bvh/bvh_builder_twolevel.cpp.avx.cpp
[ 16%] Generating ../bvh/bvh_builder_sah_spatial.cpp.avx2.cpp
[ 16%] Generating ../bvh/bvh_builder_sah_spatial.cpp.avx.cpp
[ 16%] Generating ../bvh/bvh_builder_sah_mb.cpp.avx.cpp
[ 17%] Generating ../bvh/bvh_intersector1_bvh8.cpp.avx512.cpp
[ 17%] Generating ../bvh/bvh_builder_subdiv.cpp.avx.cpp
[ 17%] Generating ../bvh/bvh_intersector_hybrid16_bvh8.cpp.avx512.cpp
[ 17%] Generating ../bvh/bvh_builder_twolevel.cpp.avx2.cpp
[ 17%] Generating ../bvh/bvh_collider.cpp.avx.cpp
[ 17%] Generating ../bvh/bvh_builder_subdiv.cpp.avx2.cpp
[ 17%] Generating ../bvh/bvh_intersector_hybrid4_bvh4.cpp.avx512.cpp
[ 17%] Generating ../bvh/bvh_intersector_hybrid4_bvh8.cpp.avx512.cpp
[ 17%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/geometry/instance_intersector.cpp.sse42.cpp.o
[ 18%] Generating ../bvh/bvh_intersector1_bvh4.cpp.avx.cpp
[ 18%] Generating ../bvh/bvh_intersector_hybrid8_bvh4.cpp.avx512.cpp
[ 18%] Generating ../bvh/bvh_collider.cpp.avx2.cpp
[ 18%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/geometry/instance_array_intersector.cpp.sse42.cpp.o
[ 19%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/geometry/curve_intersector_virtual_4v.cpp.sse42.cpp.o
[ 20%] Generating ../bvh/bvh_intersector1_bvh4.cpp.avx2.cpp
[ 20%] Generating ../bvh/bvh_intersector_hybrid4_bvh8.cpp.avx.cpp
[ 20%] Generating ../bvh/bvh_intersector1_bvh8.cpp.avx.cpp
[ 21%] Generating ../bvh/bvh_intersector1_bvh8.cpp.avx2.cpp
[ 21%] Generating ../bvh/bvh_intersector_hybrid4_bvh4.cpp.avx.cpp
[ 21%] Generating ../bvh/bvh_intersector_hybrid8_bvh4.cpp.avx.cpp
[ 22%] Generating ../bvh/bvh_intersector_hybrid8_bvh8.cpp.avx512.cpp
[ 22%] Generating ../bvh/bvh_intersector_hybrid8_bvh8.cpp.avx.cpp
[ 22%] Generating ../bvh/bvh_intersector_hybrid4_bvh4.cpp.avx2.cpp
[ 23%] Generating ../bvh/bvh_refit.cpp.avx.cpp
[ 23%] Generating ../bvh/bvh_rotate.cpp.avx.cpp
[ 23%] Generating ../bvh/bvh_intersector_hybrid4_bvh8.cpp.avx2.cpp
[ 24%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/geometry/curve_intersector_virtual_4i.cpp.sse42.cpp.o
[ 24%] Generating ../bvh/bvh_statistics.cpp.avx.cpp
[ 24%] Generating ../common/scene_curves.cpp.avx.cpp
[ 24%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/geometry/curve_intersector_virtual_4i_mb.cpp.sse42.cpp.o
[ 26%] Generating ../bvh/bvh_intersector_hybrid8_bvh4.cpp.avx2.cpp
[ 26%] Generating ../common/scene_grid_mesh.cpp.avx.cpp
[ 26%] Generating ../common/scene_curves.cpp.avx512.cpp
[ 27%] Generating ../bvh/bvh_refit.cpp.avx2.cpp
[ 27%] Generating ../bvh/bvh_intersector_hybrid8_bvh8.cpp.avx2.cpp
[ 27%] Generating ../common/scene_instance.cpp.avx512.cpp
[ 28%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/geometry/curve_intersector_virtual_8v.cpp.sse42.cpp.o
[ 28%] Generating ../bvh/bvh_refit.cpp.avx512.cpp
[ 29%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/geometry/curve_intersector_virtual_8i.cpp.sse42.cpp.o
[ 31%] Generating ../bvh/bvh_rotate.cpp.avx2.cpp
[ 31%] Generating ../common/scene_grid_mesh.cpp.avx512.cpp
[ 31%] Generating ../common/scene_instance_array.cpp.avx512.cpp
[ 31%] Generating ../common/scene_instance.cpp.avx.cpp
[ 32%] Generating ../common/scene_instance_array.cpp.avx.cpp
[ 32%] Generating ../common/scene_grid_mesh.cpp.avx2.cpp
[ 32%] Generating ../common/scene_instance.cpp.avx2.cpp
[ 32%] Generating ../common/scene_line_segments.cpp.avx512.cpp
[ 32%] Generating ../common/scene_line_segments.cpp.avx.cpp
[ 32%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/geometry/curve_intersector_virtual_8i_mb.cpp.sse42.cpp.o
[ 32%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/bvh/bvh_intersector1_bvh4.cpp.sse42.cpp.o
[ 32%] Generating ../common/scene_curves.cpp.avx2.cpp
[ 32%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/common/scene_subdiv_mesh.cpp.sse42.cpp.o
[ 32%] Generating ../common/scene_points.cpp.avx.cpp
[ 32%] Generating ../common/scene_points.cpp.avx512.cpp
[ 32%] Generating ../common/scene_quad_mesh.cpp.avx512.cpp
[ 33%] Generating ../common/scene_line_segments.cpp.avx2.cpp
[ 33%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/geometry/grid_soa.cpp.sse42.cpp.o
[ 33%] Generating ../common/scene_subdiv_mesh.cpp.avx512.cpp
[ 33%] Generating ../common/scene_instance_array.cpp.avx2.cpp
[ 33%] Generating ../common/scene_quad_mesh.cpp.avx.cpp
[ 33%] Generating ../common/scene_points.cpp.avx2.cpp
[ 33%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/subdiv/subdivpatch1base_eval.cpp.sse42.cpp.o
[ 33%] Generating ../common/scene_subdiv_mesh.cpp.avx.cpp
[ 34%] Generating ../common/scene_triangle_mesh.cpp.avx.cpp
[ 35%] Generating ../common/scene_user_geometry.cpp.avx.cpp
[ 35%] Building CXX object kernels/CMakeFiles/embree_sse42.dir/__/bvh/bvh_intersector_hybrid4_bvh4.cpp.sse42.cpp.o
[ 36%] Generating ../common/scene_triangle_mesh.cpp.avx512.cpp
[ 37%] Generating ../common/scene_user_geometry.cpp.avx512.cpp
[ 38%] Generating ../geometry/curve_intersector_virtual_4i.cpp.avx.cpp
[ 38%] Generating ../geometry/curve_intersector_virtual_4i.cpp.avx512.cpp
[ 38%] Generating ../common/scene_quad_mesh.cpp.avx2.cpp
[ 38%] Generating ../geometry/curve_intersector_virtual_4i_mb.cpp.avx.cpp
[ 39%] Generating ../common/scene_subdiv_mesh.cpp.avx2.cpp
[ 39%] Generating ../geometry/curve_intersector_virtual_4i_mb.cpp.avx512.cpp
[ 40%] Generating ../geometry/curve_intersector_virtual_4v.cpp.avx512.cpp
[ 41%] Generating ../common/scene_triangle_mesh.cpp.avx2.cpp
[ 41%] Generating ../geometry/curve_intersector_virtual_4v.cpp.avx.cpp
[ 43%] Generating ../geometry/curve_intersector_virtual_8i.cpp.avx.cpp
[ 43%] Generating ../geometry/curve_intersector_virtual_8i.cpp.avx512.cpp
[ 43%] Generating ../common/scene_user_geometry.cpp.avx2.cpp
[ 43%] Generating ../geometry/curve_intersector_virtual_8i_mb.cpp.avx.cpp
[ 43%] Generating ../geometry/curve_intersector_virtual_8v.cpp.avx.cpp
[ 43%] Generating ../geometry/curve_intersector_virtual_8v.cpp.avx512.cpp
[ 43%] Generating ../geometry/curve_intersector_virtual_8i_mb.cpp.avx512.cpp
[ 43%] Generating ../geometry/curve_intersector_virtual_4i.cpp.avx2.cpp
[ 43%] Generating ../geometry/grid_soa.cpp.avx.cpp
[ 43%] Generating ../geometry/instance_array_intersector.cpp.avx.cpp
[ 43%] Generating ../geometry/curve_intersector_virtual_4i_mb.cpp.avx2.cpp
[ 43%] Generating ../geometry/instance_array_intersector.cpp.avx512.cpp
[ 44%] Generating ../geometry/grid_soa.cpp.avx512.cpp
[ 44%] Generating ../geometry/instance_intersector.cpp.avx.cpp
[ 44%] Generating ../geometry/curve_intersector_virtual_4v.cpp.avx2.cpp
[ 44%] Generating ../geometry/primitive8.cpp.avx.cpp
[ 44%] Generating ../geometry/curve_intersector_virtual_8i.cpp.avx2.cpp
[ 44%] Generating ../geometry/instance_intersector.cpp.avx512.cpp
[ 44%] Generating ../geometry/curve_intersector_virtual_8i_mb.cpp.avx2.cpp
[ 45%] Generating ../geometry/curve_intersector_virtual_8v.cpp.avx2.cpp
[ 45%] Generating ../geometry/grid_soa.cpp.avx2.cpp
[ 46%] Generating ../geometry/instance_intersector.cpp.avx2.cpp
[ 46%] Generating ../geometry/instance_array_intersector.cpp.avx2.cpp
[ 46%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/geometry/instance_intersector.cpp.avx.cpp.o
[ 46%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/geometry/instance_intersector.cpp.avx512.cpp.o
[ 46%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/geometry/instance_array_intersector.cpp.avx.cpp.o
[ 46%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/geometry/instance_array_intersector.cpp.avx512.cpp.o
[ 47%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/geometry/instance_intersector.cpp.avx2.cpp.o
[ 47%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/geometry/curve_intersector_virtual_4v.cpp.avx.cpp.o
[ 48%] Linking CXX static library ../../liblexers.a
In file included from /build/embree-git/src/embree/kernels/geometry/grid_soa.cpp:4,
                 from /build/embree-git/src/build/geometry/grid_soa.cpp.sse42.cpp:1:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::sse42::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::sse42::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 48%] Built target lexers
[ 49%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/geometry/curve_intersector_virtual_4i.cpp.avx.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid4_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid4_bvh4.cpp.sse42.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::sse42::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::sse42::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 50%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/geometry/curve_intersector_virtual_4v.cpp.avx512.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1.cpp:19,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector1_bvh4.cpp.sse42.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::sse42::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::sse42::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 50%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/geometry/curve_intersector_virtual_4i.cpp.avx512.cpp.o
[ 50%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/geometry/instance_array_intersector.cpp.avx2.cpp.o
[ 50%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/geometry/curve_intersector_virtual_4i_mb.cpp.avx.cpp.o
[ 50%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/geometry/curve_intersector_virtual_8v.cpp.avx.cpp.o
[ 50%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/geometry/curve_intersector_virtual_4i_mb.cpp.avx512.cpp.o
[ 51%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/geometry/curve_intersector_virtual_8i.cpp.avx.cpp.o
[ 51%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/geometry/curve_intersector_virtual_4v.cpp.avx2.cpp.o
[ 51%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/geometry/curve_intersector_virtual_8v.cpp.avx512.cpp.o
[ 51%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/geometry/curve_intersector_virtual_8i_mb.cpp.avx.cpp.o
[ 52%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/geometry/curve_intersector_virtual_8i.cpp.avx512.cpp.o
[ 52%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/geometry/curve_intersector_virtual_4i.cpp.avx2.cpp.o
[ 52%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_intersector1_bvh4.cpp.avx.cpp.o
[ 52%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/geometry/curve_intersector_virtual_8i_mb.cpp.avx512.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1.cpp:19,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector1_bvh4.cpp.avx.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 52%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_intersector1_bvh4.cpp.avx512.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1.cpp:19,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector1_bvh4.cpp.avx512.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 53%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/common/scene_user_geometry.cpp.avx512.cpp.o
[ 53%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/geometry/primitive8.cpp.avx.cpp.o
[ 54%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/geometry/curve_intersector_virtual_4i_mb.cpp.avx2.cpp.o
[ 55%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/common/scene_user_geometry.cpp.avx.cpp.o
[ 55%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/geometry/curve_intersector_virtual_8v.cpp.avx2.cpp.o
[ 55%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/common/scene_instance.cpp.avx512.cpp.o
[ 55%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/common/scene_instance_array.cpp.avx512.cpp.o
[ 56%] Linking CXX static library ../libembree_sse42.a
[ 56%] Built target embree_sse42
[ 56%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/common/scene_instance.cpp.avx.cpp.o
[ 56%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/geometry/curve_intersector_virtual_8i.cpp.avx2.cpp.o
[ 56%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/common/scene_triangle_mesh.cpp.avx512.cpp.o
[ 57%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/common/scene_quad_mesh.cpp.avx512.cpp.o
[ 57%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/common/scene_instance_array.cpp.avx.cpp.o
[ 57%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/common/scene_curves.cpp.avx512.cpp.o
[ 58%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/common/scene_triangle_mesh.cpp.avx.cpp.o
[ 59%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/geometry/curve_intersector_virtual_8i_mb.cpp.avx2.cpp.o
[ 59%] Built target embree_sse42_check_globals
[ 59%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/common/scene_quad_mesh.cpp.avx.cpp.o
[ 59%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/common/scene_line_segments.cpp.avx512.cpp.o
[ 59%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/common/scene_curves.cpp.avx.cpp.o
[ 60%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/common/scene_line_segments.cpp.avx.cpp.o
[ 60%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_intersector1_bvh4.cpp.avx2.cpp.o
[ 60%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/common/scene_grid_mesh.cpp.avx.cpp.o
[ 61%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/common/scene_grid_mesh.cpp.avx512.cpp.o
[ 61%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/common/scene_user_geometry.cpp.avx2.cpp.o
[ 61%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/common/scene_points.cpp.avx.cpp.o
[ 61%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/common/scene_points.cpp.avx512.cpp.o
[ 61%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/common/scene_instance.cpp.avx2.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1.cpp:19,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector1_bvh4.cpp.avx2.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 62%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/common/scene_instance_array.cpp.avx2.cpp.o
[ 62%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/common/scene_triangle_mesh.cpp.avx2.cpp.o
[ 62%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_collider.cpp.avx.cpp.o
[ 62%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_collider.cpp.avx512.cpp.o
[ 63%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_refit.cpp.avx.cpp.o
[ 63%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_refit.cpp.avx512.cpp.o
[ 63%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/common/scene_quad_mesh.cpp.avx2.cpp.o
[ 64%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_builder.cpp.avx512.cpp.o
[ 65%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/common/scene_curves.cpp.avx2.cpp.o
[ 65%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/common/scene_line_segments.cpp.avx2.cpp.o
[ 65%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_builder.cpp.avx.cpp.o
[ 65%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/common/scene_grid_mesh.cpp.avx2.cpp.o
[ 65%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_builder_hair.cpp.avx512.cpp.o
[ 65%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_builder_hair_mb.cpp.avx512.cpp.o
[ 65%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_builder_hair.cpp.avx.cpp.o
[ 65%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/common/scene_points.cpp.avx2.cpp.o
[ 66%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_builder_hair_mb.cpp.avx.cpp.o
[ 67%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_builder_sah.cpp.avx512.cpp.o
[ 67%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_builder_sah_spatial.cpp.avx512.cpp.o
[ 68%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_collider.cpp.avx2.cpp.o
[ 68%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_builder_sah.cpp.avx.cpp.o
[ 68%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_refit.cpp.avx2.cpp.o
[ 68%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_builder_sah_mb.cpp.avx512.cpp.o
[ 68%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_builder_sah_spatial.cpp.avx.cpp.o
[ 68%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_builder.cpp.avx2.cpp.o
[ 68%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_builder_twolevel.cpp.avx512.cpp.o
[ 69%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_builder_hair.cpp.avx2.cpp.o
[ 69%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_builder_sah_mb.cpp.avx.cpp.o
[ 70%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_builder_subdiv.cpp.avx512.cpp.o
[ 71%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_builder_twolevel.cpp.avx.cpp.o
[ 71%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_builder_hair_mb.cpp.avx2.cpp.o
[ 71%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_intersector1_bvh8.cpp.avx512.cpp.o
[ 71%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_builder_subdiv.cpp.avx.cpp.o
[ 71%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/common/scene_subdiv_mesh.cpp.avx512.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/bvh_builder_subdiv.cpp:22,
                 from /build/embree-git/src/build/bvh/bvh_builder_subdiv.cpp.avx512.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 71%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_builder_morton.cpp.avx.cpp.o
[ 71%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_builder_sah.cpp.avx2.cpp.o
[ 72%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/geometry/grid_soa.cpp.avx512.cpp.o
[ 73%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_rotate.cpp.avx.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1.cpp:19,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1_bvh8.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector1_bvh8.cpp.avx512.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 73%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_builder_sah_spatial.cpp.avx2.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/bvh_builder_subdiv.cpp:22,
                 from /build/embree-git/src/build/bvh/bvh_builder_subdiv.cpp.avx.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
In file included from /build/embree-git/src/build/bvh/bvh_builder_morton.cpp.avx.cpp:1:
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx::CreateMortonLeaf<N, embree::InstanceArrayPrimitive>::NodeRecord embree::avx::CreateMortonLeaf<N, embree::InstanceArrayPrimitive>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 8; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<8> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx::BVHBuilderMorton::BuildPrim*, embree::avx::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; CreateAllocFunc = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBoundsFunc = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 8; Mesh = embree::InstanceArray; Primitive = embree::InstanceArrayPrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:434:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  434 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx::SetBVHNBounds<N>::NodeRecord embree::avx::SetBVHNBounds<N>::operator()(NodeRef, const NodeRecord*, size_t) [with int N = 8; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; NodeRef = embree::NodeRefPtr<8>; size_t = long unsigned int]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:431:27:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  431 |           return setBounds(node,bounds,numChildren);
      |                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx::BVHBuilderMorton::BuildPrim*, embree::avx::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; CreateAllocFunc = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBoundsFunc = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 8; Mesh = embree::InstanceArray; Primitive = embree::InstanceArrayPrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:55:26: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
   55 |         BBox3fx result = (BBox3fx&)res;
      |                          ^~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx::CreateMortonLeaf<N, embree::InstanceArrayPrimitive>::NodeRecord embree::avx::CreateMortonLeaf<N, embree::InstanceArrayPrimitive>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx::BVHBuilderMorton::BuildPrim*, embree::avx::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBoundsFunc = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::InstanceArray; Primitive = embree::InstanceArrayPrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:434:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  434 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx::SetBVHNBounds<N>::NodeRecord embree::avx::SetBVHNBounds<N>::operator()(NodeRef, const NodeRecord*, size_t) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; NodeRef = embree::NodeRefPtr<4>; size_t = long unsigned int]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:431:27:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  431 |           return setBounds(node,bounds,numChildren);
      |                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx::BVHBuilderMorton::BuildPrim*, embree::avx::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBoundsFunc = embree::avx::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::InstanceArray; Primitive = embree::InstanceArrayPrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:55:26: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
   55 |         BBox3fx result = (BBox3fx&)res;
      |                          ^~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx::CreateMortonLeaf<N, embree::InstancePrimitive>::NodeRecord embree::avx::CreateMortonLeaf<N, embree::InstancePrimitive>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 8; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<8> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::InstancePrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx::BVHBuilderMorton::BuildPrim*, embree::avx::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::InstancePrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; CreateAllocFunc = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::InstancePrimitive>; CalculateBoundsFunc = embree::avx::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 8; Mesh = embree::Instance; Primitive = embree::InstancePrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:390:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  390 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx::CreateMortonLeaf<N, embree::InstancePrimitive>::NodeRecord embree::avx::CreateMortonLeaf<N, embree::InstancePrimitive>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::InstancePrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx::BVHBuilderMorton::BuildPrim*, embree::avx::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::InstancePrimitive>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::InstancePrimitive>; CalculateBoundsFunc = embree::avx::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::Instance; Primitive = embree::InstancePrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:390:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  390 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx::CreateMortonLeaf<N, embree::Object>::NodeRecord embree::avx::CreateMortonLeaf<N, embree::Object>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 8; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<8> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::Object>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx::BVHBuilderMorton::BuildPrim*, embree::avx::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::Object>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; CreateAllocFunc = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetBoundsFunc = embree::avx::SetBVHNBounds<8>; CreateLeafFunc = embree::avx::CreateMortonLeaf<8, embree::Object>; CalculateBoundsFunc = embree::avx::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 8; Mesh = embree::UserGeometry; Primitive = embree::Object]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:346:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  346 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx::CreateMortonLeaf<N, embree::Object>::NodeRecord embree::avx::CreateMortonLeaf<N, embree::Object>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::Object>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx::BVHBuilderMorton::BuildPrim*, embree::avx::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::Object>; CalculateBounds = embree::avx::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::avx::SetBVHNBounds<4>; CreateLeafFunc = embree::avx::CreateMortonLeaf<4, embree::Object>; CalculateBoundsFunc = embree::avx::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::UserGeometry; Primitive = embree::Object]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:346:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  346 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
[ 73%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/subdiv/subdivpatch1base_eval.cpp.avx512.cpp.o
In file included from /build/embree-git/src/embree/kernels/geometry/grid_soa.cpp:4,
                 from /build/embree-git/src/build/geometry/grid_soa.cpp.avx512.cpp:1:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 73%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_intersector_hybrid4_bvh4.cpp.avx512.cpp.o
[ 74%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_builder_sah_mb.cpp.avx2.cpp.o
[ 74%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/builders/primrefgen.cpp.avx.cpp.o
[ 74%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_builder_twolevel.cpp.avx2.cpp.o
[ 75%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_intersector_hybrid8_bvh4.cpp.avx512.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid4_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid4_bvh4.cpp.avx512.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 75%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_intersector1_bvh8.cpp.avx.cpp.o
[ 75%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_intersector_hybrid4_bvh8.cpp.avx512.cpp.o
[ 75%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh.cpp.avx.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid8_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid8_bvh4.cpp.avx512.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 75%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_intersector_hybrid8_bvh8.cpp.avx512.cpp.o
[ 75%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_builder_subdiv.cpp.avx2.cpp.o
[ 76%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_builder_morton.cpp.avx2.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1.cpp:19,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1_bvh8.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector1_bvh8.cpp.avx.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid4_bvh8.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid4_bvh8.cpp.avx512.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 76%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_rotate.cpp.avx2.cpp.o
[ 76%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_intersector_hybrid16_bvh8.cpp.avx512.cpp.o
[ 77%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_statistics.cpp.avx.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/bvh_builder_subdiv.cpp:22,
                 from /build/embree-git/src/build/bvh/bvh_builder_subdiv.cpp.avx2.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid8_bvh8.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid8_bvh8.cpp.avx512.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
In file included from /build/embree-git/src/build/bvh/bvh_builder_morton.cpp.avx2.cpp:1:
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx2::CreateMortonLeaf<N, embree::InstanceArrayPrimitive>::NodeRecord embree::avx2::CreateMortonLeaf<N, embree::InstanceArrayPrimitive>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 8; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<8> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx2::BVHBuilderMorton::BuildPrim*, embree::avx2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; CreateAllocFunc = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBoundsFunc = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 8; Mesh = embree::InstanceArray; Primitive = embree::InstanceArrayPrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:434:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  434 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx2::SetBVHNBounds<N>::NodeRecord embree::avx2::SetBVHNBounds<N>::operator()(NodeRef, const NodeRecord*, size_t) [with int N = 8; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; NodeRef = embree::NodeRefPtr<8>; size_t = long unsigned int]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:431:27:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  431 |           return setBounds(node,bounds,numChildren);
      |                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx2::BVHBuilderMorton::BuildPrim*, embree::avx2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; CreateAllocFunc = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::InstanceArrayPrimitive>; CalculateBoundsFunc = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 8; Mesh = embree::InstanceArray; Primitive = embree::InstanceArrayPrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:55:26: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
   55 |         BBox3fx result = (BBox3fx&)res;
      |                          ^~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx2::CreateMortonLeaf<N, embree::InstanceArrayPrimitive>::NodeRecord embree::avx2::CreateMortonLeaf<N, embree::InstanceArrayPrimitive>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx2::BVHBuilderMorton::BuildPrim*, embree::avx2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBoundsFunc = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::InstanceArray; Primitive = embree::InstanceArrayPrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:434:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  434 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx2::SetBVHNBounds<N>::NodeRecord embree::avx2::SetBVHNBounds<N>::operator()(NodeRef, const NodeRecord*, size_t) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; NodeRef = embree::NodeRefPtr<4>; size_t = long unsigned int]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:431:27:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  431 |           return setBounds(node,bounds,numChildren);
      |                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx2::BVHBuilderMorton::BuildPrim*, embree::avx2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBoundsFunc = embree::avx2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::InstanceArray; Primitive = embree::InstanceArrayPrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:55:26: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
   55 |         BBox3fx result = (BBox3fx&)res;
      |                          ^~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx2::CreateMortonLeaf<N, embree::InstancePrimitive>::NodeRecord embree::avx2::CreateMortonLeaf<N, embree::InstancePrimitive>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 8; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<8> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::InstancePrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx2::BVHBuilderMorton::BuildPrim*, embree::avx2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::InstancePrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; CreateAllocFunc = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::InstancePrimitive>; CalculateBoundsFunc = embree::avx2::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 8; Mesh = embree::Instance; Primitive = embree::InstancePrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:390:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  390 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx2::CreateMortonLeaf<N, embree::InstancePrimitive>::NodeRecord embree::avx2::CreateMortonLeaf<N, embree::InstancePrimitive>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::InstancePrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx2::BVHBuilderMorton::BuildPrim*, embree::avx2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::InstancePrimitive>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::InstancePrimitive>; CalculateBoundsFunc = embree::avx2::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::Instance; Primitive = embree::InstancePrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:390:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  390 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx2::CreateMortonLeaf<N, embree::Object>::NodeRecord embree::avx2::CreateMortonLeaf<N, embree::Object>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 8; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<8> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::Object>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx2::BVHBuilderMorton::BuildPrim*, embree::avx2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::Object>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<8> >; CreateAllocFunc = embree::BVHN<8>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<8>, 8>::Create; SetBoundsFunc = embree::avx2::SetBVHNBounds<8>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<8, embree::Object>; CalculateBoundsFunc = embree::avx2::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 8; Mesh = embree::UserGeometry; Primitive = embree::Object]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:346:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  346 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::avx2::CreateMortonLeaf<N, embree::Object>::NodeRecord embree::avx2::CreateMortonLeaf<N, embree::Object>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::Object>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::avx2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::avx2::BVHBuilderMorton::BuildPrim*, embree::avx2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::Object>; CalculateBounds = embree::avx2::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::avx2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::avx2::SetBVHNBounds<4>; CreateLeafFunc = embree::avx2::CreateMortonLeaf<4, embree::Object>; CalculateBoundsFunc = embree::avx2::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::avx2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::UserGeometry; Primitive = embree::Object]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:346:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  346 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
[ 78%] Building CXX object kernels/CMakeFiles/embree_avx512.dir/__/bvh/bvh_intersector_hybrid16_bvh4.cpp.avx512.cpp.o
[ 78%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/builders/primrefgen.cpp.avx2.cpp.o
[ 78%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/common/scene_subdiv_mesh.cpp.avx.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid16_bvh8.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid16_bvh8.cpp.avx512.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 78%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_intersector1_bvh8.cpp.avx2.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid16_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid16_bvh4.cpp.avx512.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx512::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 78%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/geometry/grid_soa.cpp.avx.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1.cpp:19,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1_bvh8.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector1_bvh8.cpp.avx2.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 79%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/common/scene_subdiv_mesh.cpp.avx2.cpp.o
In file included from /build/embree-git/src/embree/kernels/geometry/grid_soa.cpp:4,
                 from /build/embree-git/src/build/geometry/grid_soa.cpp.avx.cpp:1:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 80%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/subdiv/subdivpatch1base_eval.cpp.avx.cpp.o
[ 80%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_intersector_hybrid4_bvh4.cpp.avx.cpp.o
[ 80%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/geometry/grid_soa.cpp.avx2.cpp.o
[ 80%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/subdiv/subdivpatch1base_eval.cpp.avx2.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid4_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid4_bvh4.cpp.avx.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 80%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_intersector_hybrid8_bvh4.cpp.avx.cpp.o
In file included from /build/embree-git/src/embree/kernels/geometry/grid_soa.cpp:4,
                 from /build/embree-git/src/build/geometry/grid_soa.cpp.avx2.cpp:1:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 81%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_intersector_hybrid4_bvh4.cpp.avx2.cpp.o
[ 81%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_intersector_hybrid4_bvh8.cpp.avx.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid8_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid8_bvh4.cpp.avx.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 81%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_intersector_hybrid8_bvh4.cpp.avx2.cpp.o
[ 82%] Building CXX object kernels/CMakeFiles/embree_avx.dir/__/bvh/bvh_intersector_hybrid8_bvh8.cpp.avx.cpp.o
[ 82%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_intersector_hybrid4_bvh8.cpp.avx2.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid4_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid4_bvh4.cpp.avx2.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid4_bvh8.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid4_bvh8.cpp.avx.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 82%] Building CXX object kernels/CMakeFiles/embree_avx2.dir/__/bvh/bvh_intersector_hybrid8_bvh8.cpp.avx2.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid8_bvh4.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid8_bvh4.cpp.avx2.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid4_bvh8.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid4_bvh8.cpp.avx2.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid8_bvh8.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid8_bvh8.cpp.avx.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid8_bvh8.cpp:4,
                 from /build/embree-git/src/build/bvh/bvh_intersector_hybrid8_bvh8.cpp.avx2.cpp:1:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::avx2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 82%] Linking CXX static library ../libembree_avx512.a
[ 82%] Built target embree_avx512
[ 82%] Built target embree_avx512_check_globals
[ 82%] Linking CXX static library ../libembree_avx.a
[ 82%] Built target embree_avx
[ 82%] Built target embree_avx_check_globals
[ 83%] Linking CXX static library ../libembree_avx2.a
[ 83%] Built target embree_avx2
[ 83%] Building CXX object kernels/CMakeFiles/embree.dir/common/acceln.cpp.o
[ 83%] Building CXX object kernels/CMakeFiles/embree.dir/common/stat.cpp.o
[ 84%] Building CXX object kernels/CMakeFiles/embree.dir/common/rtcore_builder.cpp.o
[ 84%] Building CXX object kernels/CMakeFiles/embree.dir/common/device.cpp.o
[ 85%] Building CXX object kernels/CMakeFiles/embree.dir/common/accelset.cpp.o
[ 86%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_instance_array.cpp.o
[ 86%] Building CXX object kernels/CMakeFiles/embree.dir/common/alloc.cpp.o
[ 86%] Building CXX object kernels/CMakeFiles/embree.dir/common/state.cpp.o
[ 86%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_verify.cpp.o
[ 86%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene.cpp.o
[ 86%] Building CXX object kernels/CMakeFiles/embree.dir/common/rtcore.cpp.o
[ 87%] Building CXX object kernels/CMakeFiles/embree.dir/common/geometry.cpp.o
[ 87%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_user_geometry.cpp.o
[ 87%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_instance.cpp.o
[ 87%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_triangle_mesh.cpp.o
[ 87%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_quad_mesh.cpp.o
[ 87%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_curves.cpp.o
[ 88%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_line_segments.cpp.o
[ 88%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_grid_mesh.cpp.o
[ 88%] Built target embree_avx2_check_globals
[ 88%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_points.cpp.o
[ 89%] Building CXX object kernels/CMakeFiles/embree.dir/common/motion_derivative.cpp.o
[ 89%] Building CXX object kernels/CMakeFiles/embree.dir/subdiv/bezier_curve.cpp.o
[ 89%] Building CXX object kernels/CMakeFiles/embree.dir/subdiv/bspline_curve.cpp.o
[ 89%] Building CXX object kernels/CMakeFiles/embree.dir/subdiv/catmullrom_curve.cpp.o
[ 90%] Building CXX object kernels/CMakeFiles/embree.dir/geometry/primitive4.cpp.o
[ 90%] Building CXX object kernels/CMakeFiles/embree.dir/geometry/instance_intersector.cpp.o
[ 90%] Building CXX object kernels/CMakeFiles/embree.dir/geometry/instance_array_intersector.cpp.o
[ 91%] Building CXX object kernels/CMakeFiles/embree.dir/geometry/curve_intersector_virtual_4v.cpp.o
[ 91%] Building CXX object kernels/CMakeFiles/embree.dir/geometry/curve_intersector_virtual_4i.cpp.o
[ 91%] Building CXX object kernels/CMakeFiles/embree.dir/geometry/curve_intersector_virtual_4i_mb.cpp.o
[ 91%] Building CXX object kernels/CMakeFiles/embree.dir/geometry/curve_intersector_virtual_8v.cpp.o
[ 92%] Building CXX object kernels/CMakeFiles/embree.dir/geometry/curve_intersector_virtual_8i.cpp.o
[ 92%] Building CXX object kernels/CMakeFiles/embree.dir/geometry/curve_intersector_virtual_8i_mb.cpp.o
[ 92%] Building CXX object kernels/CMakeFiles/embree.dir/builders/primrefgen.cpp.o
[ 93%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh.cpp.o
[ 93%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_statistics.cpp.o
[ 93%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh4_factory.cpp.o
[ 93%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh8_factory.cpp.o
[ 94%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_collider.cpp.o
[ 94%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_rotate.cpp.o
[ 95%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_refit.cpp.o
[ 95%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_builder.cpp.o
[ 95%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_builder_hair.cpp.o
[ 95%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_builder_hair_mb.cpp.o
[ 95%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_builder_morton.cpp.o
[ 96%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_builder_sah.cpp.o
[ 96%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_builder_sah_spatial.cpp.o
[ 96%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_builder_sah_mb.cpp.o
[ 97%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_builder_twolevel.cpp.o
[ 97%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_intersector1_bvh4.cpp.o
[ 97%] Building CXX object kernels/CMakeFiles/embree.dir/common/scene_subdiv_mesh.cpp.o
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::sse2::CreateMortonLeaf<N, embree::InstanceArrayPrimitive>::NodeRecord embree::sse2::CreateMortonLeaf<N, embree::InstanceArrayPrimitive>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::sse2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::sse2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::sse2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::sse2::BVHBuilderMorton::BuildPrim*, embree::sse2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::sse2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::sse2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBoundsFunc = embree::sse2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::sse2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::InstanceArray; Primitive = embree::InstanceArrayPrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:434:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  434 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::sse2::SetBVHNBounds<N>::NodeRecord embree::sse2::SetBVHNBounds<N>::operator()(NodeRef, const NodeRecord*, size_t) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; NodeRef = embree::NodeRefPtr<4>; size_t = long unsigned int]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:431:27:   required from ‘ReductionTy embree::sse2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::sse2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  431 |           return setBounds(node,bounds,numChildren);
      |                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::sse2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::sse2::BVHBuilderMorton::BuildPrim*, embree::sse2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBounds = embree::sse2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::sse2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::InstanceArrayPrimitive>; CalculateBoundsFunc = embree::sse2::CalculateMeshBounds<embree::InstanceArray>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::sse2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::InstanceArray; Primitive = embree::InstanceArrayPrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:55:26: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
   55 |         BBox3fx result = (BBox3fx&)res;
      |                          ^~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::sse2::CreateMortonLeaf<N, embree::InstancePrimitive>::NodeRecord embree::sse2::CreateMortonLeaf<N, embree::InstancePrimitive>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::sse2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::InstancePrimitive>; CalculateBounds = embree::sse2::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::sse2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::sse2::BVHBuilderMorton::BuildPrim*, embree::sse2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::InstancePrimitive>; CalculateBounds = embree::sse2::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::sse2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::InstancePrimitive>; CalculateBoundsFunc = embree::sse2::CalculateMeshBounds<embree::Instance>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::sse2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::Instance; Primitive = embree::InstancePrimitive]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:390:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  390 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp: In instantiation of ‘embree::sse2::CreateMortonLeaf<N, embree::Object>::NodeRecord embree::sse2::CreateMortonLeaf<N, embree::Object>::operator()(const embree::range<unsigned int>&, const embree::FastAllocator::CachedAllocator&) [with int N = 4; NodeRecord = embree::BVHNodeRecord<embree::NodeRefPtr<4> >]’:
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:406:30:   required from ‘ReductionTy embree::sse2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::recurse(size_t, const embree::range<unsigned int>&, Allocator, bool) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::Object>; CalculateBounds = embree::sse2::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  406 |             return createLeaf(current,alloc);
      |                    ~~~~~~~~~~^~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:442:36:   required from ‘ReductionTy embree::sse2::BVHBuilderMorton::BuilderT<ReductionTy, Allocator, CreateAllocator, CreateNodeFunc, SetNodeBoundsFunc, CreateLeafFunc, CalculateBounds, ProgressMonitor>::build(embree::sse2::BVHBuilderMorton::BuildPrim*, embree::sse2::BVHBuilderMorton::BuildPrim*, size_t) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; Allocator = embree::FastAllocator::CachedAllocator; CreateAllocator = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetNodeBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::Object>; CalculateBounds = embree::sse2::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  442 |           const ReductionTy root = recurse(1, range<unsigned>(0,(unsigned)numPrimitives), nullptr, true);
      |                                    ^~~~~~~
/build/embree-git/src/embree/kernels/bvh/../builders/bvh_builder_morton.h:498:31:   required from ‘static ReductionTy embree::sse2::BVHBuilderMorton::build(CreateAllocFunc, CreateNodeFunc, SetBoundsFunc, CreateLeafFunc, CalculateBoundsFunc, ProgressMonitor, BuildPrim*, BuildPrim*, size_t, const Settings&) [with ReductionTy = embree::BVHNodeRecord<embree::NodeRefPtr<4> >; CreateAllocFunc = embree::BVHN<4>::CreateAlloc; CreateNodeFunc = embree::AABBNode_t<embree::NodeRefPtr<4>, 4>::Create; SetBoundsFunc = embree::sse2::SetBVHNBounds<4>; CreateLeafFunc = embree::sse2::CreateMortonLeaf<4, embree::Object>; CalculateBoundsFunc = embree::sse2::CalculateMeshBounds<embree::UserGeometry>; ProgressMonitor = embree::Scene::BuildProgressMonitorInterface; size_t = long unsigned int]’
  498 |           return builder.build(src,tmp,numPrimitives);
      |                  ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:506:56:   required from ‘void embree::sse2::BVHNMeshBuilderMorton<N, Mesh, Primitive>::build() [with int N = 4; Mesh = embree::UserGeometry; Primitive = embree::Object]’
  506 |         auto root = BVHBuilderMorton::build<NodeRecord>(
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
  507 |           typename BVH::CreateAlloc(bvh),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               
  508 |           typename BVH::AABBNode::Create(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             
  509 |           setBounds,createLeaf,calculateBounds,bvh->scene->progressInterface,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  510 |           morton.data(),dest,numPrimitivesGen,settings);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:475:12:   required from here
  475 |       void build()
      |            ^~~~~
/build/embree-git/src/embree/kernels/bvh/bvh_builder_morton.cpp:346:25: warning: casting ‘embree::BBox3fa’ {aka ‘embree::BBox<embree::Vec3fa>’} to ‘embree::BBox3fx&’ {aka ‘embree::BBox<embree::Vec3fx>&’} does not use ‘embree::BBox<T>::BBox(const embree::BBox<T1>&) [with T1 = embree::Vec3fa; T = embree::Vec3fx]’ [-Wcast-user-defined]
  346 |         BBox3fx box_o = (BBox3fx&)bounds;
      |                         ^~~~~~~~~~~~~~~~
[ 97%] Building CXX object kernels/CMakeFiles/embree.dir/subdiv/tessellation_cache.cpp.o
[ 98%] Building CXX object kernels/CMakeFiles/embree.dir/subdiv/subdivpatch1base.cpp.o
[ 98%] Building CXX object kernels/CMakeFiles/embree.dir/subdiv/catmullclark_coefficients.cpp.o
[ 98%] Building CXX object kernels/CMakeFiles/embree.dir/geometry/grid_soa.cpp.o
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1.cpp:19,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector1_bvh4.cpp:4:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::sse2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::sse2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[ 99%] Building CXX object kernels/CMakeFiles/embree.dir/subdiv/subdivpatch1base_eval.cpp.o
[ 99%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_builder_subdiv.cpp.o
[ 99%] Building CXX object kernels/CMakeFiles/embree.dir/bvh/bvh_intersector_hybrid4_bvh4.cpp.o
In file included from /build/embree-git/src/embree/kernels/geometry/grid_soa.cpp:4:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::sse2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::sse2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
In file included from /build/embree-git/src/embree/kernels/bvh/../geometry/subdivpatch1_intersector.h:7,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid.cpp:20,
                 from /build/embree-git/src/embree/kernels/bvh/bvh_intersector_hybrid4_bvh4.cpp:4:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::sse2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::sse2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
In file included from /build/embree-git/src/embree/kernels/bvh/bvh_builder_subdiv.cpp:22:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘embree::BVHN<4>::NodeRef& embree::sse2::GridSOA::root(size_t)’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:61:133: warning: casting ‘char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   61 |       __forceinline       BVH4::NodeRef& root(size_t t = 0)       { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h: In member function ‘const embree::BVHN<4>::NodeRef& embree::sse2::GridSOA::root(size_t) const’:
/build/embree-git/src/embree/kernels/bvh/../geometry/grid_soa.h:62:133: warning: casting ‘const char’ to ‘embree::BVHN<4>::NodeRef&’ {aka ‘embree::NodeRefPtr<4>&’} does not use ‘embree::NodeRefPtr<N>::NodeRefPtr(size_t) [with int N = 4; size_t = long unsigned int]’ [-Wcast-user-defined]
   62 |       __forceinline const BVH4::NodeRef& root(size_t t = 0) const { return (BVH4::NodeRef&)data[rootOffset + t*sizeof(BVH4::NodeRef)]; }
      |                                                                                                                                     ^
[100%] Linking CXX shared library ../libembree4.so
[100%] Built target embree
